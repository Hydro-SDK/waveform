name: Publish Nightly

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        include:
          - os: ubuntu-18.04
            TARGET: linux
    steps:
      - name: Install Linux dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config libreadline-dev
      # Set up Flutter and add it to the path.
      - name: Clone Flutter repository with stable channel
        uses: actions/checkout@v2
        with:
          repository: "flutter/flutter"
          ref: "1.22.0"
          path: "flutter"
          fetch-depth: 0
      - name: Add Flutter to the PATH for Unix
        run: echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
        if: runner.os != 'Windows'
      - name: Add Flutter to the PATH for Windows
        run: echo "${env:GITHUB_WORKSPACE}\flutter\bin" >> ${env:GITHUB_PATH}
        if: runner.os == 'Windows'
      - name: Add Dart to the PATH for Unix
        run: echo "$GITHUB_WORKSPACE/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
        if: runner.os != 'Windows'
      - name: Run Flutter doctor
        run: flutter doctor -v

      - name: Node and NPM Versions
        run: node -v && npm -v

      - name: Clone Waveform
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.WAVEFORM_BOT_PAT }}
          path: "waveform"

      - name: Get packages for Waveform JS
        run: npm install
        working-directory: waveform

      - name: Get packages for Waveform Dart
        run: flutter pub get
        working-directory: waveform

      - name: Fetch Tags
        run: git fetch --all --tags
        working-directory: waveform

      - name: Configure Git Identity
        env:
          PUBLISH_EMAIL: ${{secrets.PUBLISH_EMAIL}}
          PUBLISH_USERNAME: ${{secrets.PUBLISH_USERNAME}}
        run: |
          git config --global user.email "$PUBLISH_EMAIL"
          git config --global user.name "$PUBLISH_USERNAME"
        working-directory: waveform

      - name: Publish Nightly to NPM
        env:
          NPM_ORG_TOKEN: ${{secrets.NPM_ORG_TOKEN}}
        run: export NPM_TOKEN=$NPM_ORG_TOKEN; dart bin/tagAndPublishNightly.dart
        working-directory: waveform
      
      - name: Publish Nightly to Pub
        uses: sakebook/actions-flutter-pub-publisher@v1.3.1
        with:
          credential: ${{ secrets.PUB_PUBLISHING_JSON }}
          flutter_package: false
          skip_test: true
          dry_run: false
          package_directory: waveform 

      - name: Push Tags
        run: git push --tags
        working-directory: waveform
